[{"C:\\Users\\Mark Daniel\\cemit\\react-todo-app\\src\\index.js":"1","C:\\Users\\Mark Daniel\\cemit\\react-todo-app\\src\\App.js":"2","C:\\Users\\Mark Daniel\\cemit\\react-todo-app\\src\\components\\TodoForm.js":"3","C:\\Users\\Mark Daniel\\cemit\\react-todo-app\\src\\components\\TodoList.js":"4","C:\\Users\\Mark Daniel\\cemit\\react-todo-app\\src\\components\\Todo.js":"5"},{"size":199,"mtime":1607058231048,"results":"6","hashOfConfig":"7"},{"size":185,"mtime":1607085889090,"results":"8","hashOfConfig":"7"},{"size":1388,"mtime":1607159258180,"results":"9","hashOfConfig":"7"},{"size":1331,"mtime":1607138274953,"results":"10","hashOfConfig":"7"},{"size":1345,"mtime":1607138144885,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"isrno2",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"C:\\Users\\Mark Daniel\\cemit\\react-todo-app\\src\\index.js",[],["24","25"],"C:\\Users\\Mark Daniel\\cemit\\react-todo-app\\src\\App.js",[],"C:\\Users\\Mark Daniel\\cemit\\react-todo-app\\src\\components\\TodoForm.js",[],"C:\\Users\\Mark Daniel\\cemit\\react-todo-app\\src\\components\\TodoList.js",[],"C:\\Users\\Mark Daniel\\cemit\\react-todo-app\\src\\components\\Todo.js",["26","27","28"],"import React, {useState} from 'react';\r\nimport TodoForm from './TodoForm'\r\nimport TodoList from './TodoList';\r\nimport {RiCloseCircleLine} from 'react-icons/ri';\r\nimport {TiEdit} from 'react-icons/ti';\r\n\r\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}) {\r\n\r\n    const [edit, setEdit] = useState ({\r\n        id: null,\r\n        value:''\r\n    });\r\n\r\n    const submitUpdate = value => {\r\n        updateTodo (edit.id, value);\r\n        setEdit({\r\n            id:null,\r\n            value:''\r\n        });\r\n    };\r\n\r\n    if (edit.id){\r\n        return <TodoForm edit = {edit} onSubmit = {submitUpdate} />;\r\n    }\r\n\r\n    return todos.map ((todo, index) => (\r\n        <div className = {todo.isComplete ? 'todo-row complete' : 'todo-row'}\r\n            key = {index}>\r\n        \r\n            <div key={todo.id} onClick ={() => completeTodo(todo.id)}>\r\n                {todo.text}\r\n            </div>\r\n            <div className =\"icons\">\r\n                <RiCloseCircleLine \r\n                    onClick = {() => removeTodo(todo.id)}\r\n                    className = 'delete-icon'\r\n                />\r\n                < TiEdit\r\n                     onClick = {() => setEdit({id: todo.id, value: todo.text})}\r\n                    className = 'edit-icon'\r\n                />\r\n            </div>\r\n        </div>\r\n\r\n    ));\r\n}\r\n\r\nexport default Todo;\r\n",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":2,"column":8,"nodeType":"35","messageId":"36","endLine":2,"endColumn":16},{"ruleId":"33","severity":1,"message":"37","line":3,"column":8,"nodeType":"35","messageId":"36","endLine":3,"endColumn":16},{"ruleId":"33","severity":1,"message":"38","line":8,"column":12,"nodeType":"35","messageId":"36","endLine":8,"endColumn":16},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'TodoForm' is defined but never used.","Identifier","unusedVar","'TodoList' is defined but never used.","'edit' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]